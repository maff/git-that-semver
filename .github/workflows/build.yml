name: Test and Build

on:
  push:
    branches: ["main"]
    # Publish semver tags as releases.
    tags: ["v*.*.*"]
  pull_request:
    branches: ["main"]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  git-that-semver:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    outputs:
      GTS_DOCKER_VERSION: ${{ steps.git-that-semver.outputs.GTS_DOCKER_VERSION }}
      GTS_DOCKER_TAGS: ${{ steps.git-that-semver.outputs.GTS_DOCKER_TAGS }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - id: git-that-semver
        name: git-that-semver
        uses: ./.github/actions/git-that-semver

      - name: Debug GTS_DOCKER_TAGS
        run: |
          echo "GTS_DOCKER_VERSION: ${{ steps.git-that-semver.outputs.GTS_DOCKER_VERSION }}"
          echo "GTS_DOCKER_TAGS: ${{ steps.git-that-semver.outputs.GTS_DOCKER_TAGS }}"

  test:
    runs-on: ubuntu-latest
    needs: git-that-semver

    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Lint
        run: bun lint

      - name: Test
        run: bun test

  docker-build:
    runs-on: ubuntu-latest
    needs: [test, git-that-semver]

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug GTS_DOCKER_TAGS
        run: |
          echo "GTS_DOCKER_VERSION: ${{ needs.git-that-semver.outputs.GTS_DOCKER_VERSION }}"
          echo "GTS_DOCKER_TAGS: ${{ needs.git-that-semver.outputs.GTS_DOCKER_TAGS }}"

      - id: tags_with_prefix
        name: Convert GTS_DOCKER_TAGS to include image prefix
        env:
          GTS_DOCKER_TAGS: ${{ needs.git-that-semver.outputs.GTS_DOCKER_TAGS }}
        run: |
          tags=()
          for tag in $GTS_DOCKER_TAGS; do
            tags+=("${env.REGISTRY}/${env.IMAGE_NAME}:${tag}")
          done

          tags_csv=$(IFS=,; echo "${tags[*]}")
          echo "Joined tags with prefix: $tags_csv"
          echo "tags_csv=$tags_csv" >> $GITHUB_OUTPUT

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.version=${{ needs.git-that-semver.outputs.GTS_DOCKER_VERSION }}

      - name: Debug metadata-action outputs
        run: |
          echo "${{ toJson(steps.meta.outputs) }}"

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.tags_with_prefix.outputs.tags_csv }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
